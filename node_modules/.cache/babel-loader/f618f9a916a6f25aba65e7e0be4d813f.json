{"ast":null,"code":"var _jsxFileName = \"/Users/daniel.medrano/Desktop/TV-Search/src/components/ShowList.js\";\nimport Img from './placeholder1.jpg';\nimport React from 'react';\nimport SingleShow from './SingleShow';\nimport ShowDetail from './ShowDetail';\n\nvar ShowList = function ShowList(_ref) {\n  var shows = _ref.shows,\n      onShowSelect = _ref.onShowSelect,\n      selected = _ref.selected,\n      term = _ref.term;\n  var baseImg = 'https://image.tmdb.org/t/p/w500';\n  var renderedShow = shows.map(function (show) {\n    var img = show.poster_path != null ? \"\".concat(baseImg).concat(show.poster_path) : Img;\n    return React.createElement(SingleShow, {\n      key: show.id,\n      onShowSelect: onShowSelect,\n      show: show,\n      image: img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  });\n\n  if (!selected) {\n    if (shows.length < 1) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"No results found\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"shows row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, renderedShow));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"show well\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(ShowDetail, {\n      info: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n};\n\nexport default ShowList;","map":{"version":3,"sources":["/Users/daniel.medrano/Desktop/TV-Search/src/components/ShowList.js"],"names":["Img","React","SingleShow","ShowDetail","ShowList","shows","onShowSelect","selected","term","baseImg","renderedShow","map","show","img","poster_path","id","length"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA2C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACxD,MAAMC,OAAO,GAAG,iCAAhB;AACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD,EAAU;AACrC,QAAMC,GAAG,GAAGD,IAAI,CAACE,WAAL,IAAoB,IAApB,aAA8BL,OAA9B,SAAwCG,IAAI,CAACE,WAA7C,IAA6Dd,GAAzE;AACA,WACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEY,IAAI,CAACG,EAAtB;AAA0B,MAAA,YAAY,EAAET,YAAxC;AAAsD,MAAA,IAAI,EAAEM,IAA5D;AAAkE,MAAA,KAAK,EAAEC,GAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GALoB,CAArB;;AAMA,MAAI,CAACN,QAAL,EAAe;AACX,QAAIF,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AAClB,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ;AAKH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,YADL,CADJ,CADJ;AAOH,GAfD,MAeO;AACH,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEH,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADJ;AAOH;AACJ,CAhCD;;AAkCA,eAAeH,QAAf","sourcesContent":["import Img from './placeholder1.jpg';\nimport React from 'react';\nimport SingleShow from './SingleShow';\nimport ShowDetail from './ShowDetail';\n\nconst ShowList = ({shows, onShowSelect, selected, term}) => {\n    const baseImg = 'https://image.tmdb.org/t/p/w500';\n    const renderedShow = shows.map((show) => {\n        const img = show.poster_path != null ? `${baseImg}${show.poster_path}` : Img;\n        return (\n            <SingleShow key={show.id} onShowSelect={onShowSelect} show={show} image={img}/>\n        );\n    });\n    if (!selected) {\n        if (shows.length < 1) {\n            return (\n                <div className=\"container\">\n                    <h1>No results found</h1>\n                </div>\n            )\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"shows row\">\n                    {renderedShow}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container\">\n                <div className=\"show well\">\n                <ShowDetail info={selected}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ShowList;"]},"metadata":{},"sourceType":"module"}